---
// Imports
import { CONFIG_BASE } from "../consts";
import CompSvgSheet from "./CompSvgSheet.astro";

// Component Props
const { paginationData, item } = Astro.props;

// Sort paginationData by order
const sortedData = [...paginationData].sort((a, b) => a.order - b.order);
console.log();


// Find current item's order
const currentItem = sortedData.find(p => p.slug === item);
const currentOrder = currentItem ? currentItem.order : null;

// Determine previous and next items based on order
const currentIndex = sortedData.findIndex(p => p.order === currentOrder);
const prevItem = currentIndex > 0 ? sortedData[currentIndex - 1] : null;
const nextItem = currentIndex < sortedData.length - 1 ? sortedData[currentIndex + 1] : null;
---

<section class="pagination | l-wrapper l-switcher">
  <!-- Previous Link -->
  {prevItem ? (
    <div class="pagination__inner | u-border--block">
      <a href={`${CONFIG_BASE}/portfolio/${prevItem.slug}`}>
        <div class="l-sidebar">
          <div class="pagination__icon">
            <svg class="icon" fill="currentColor" viewBox="0 0 10 16">
              <use xlink:href="#arrow-left"></use>
            </svg>
            <span class="u-vh">Previous Project</span>
          </div>
          <div class="pagination__content | l-flow">
            <h3>{prevItem.title}</h3>
            <p>Previous Project</p>
          </div>
        </div>
      </a>
    </div>
  ) : (
    <div class="pagination__inner | u-border--block"></div>
  )}

  <!-- Next Link -->
  {nextItem ? (
    <div class="pagination__inner | u-border--block">
      <a href={`${CONFIG_BASE}/portfolio/${nextItem.slug}`}>
        <div class="l-sidebar">
          <div class="pagination__icon">
            <svg class="icon" fill="currentColor" viewBox="0 0 10 16">
              <use xlink:href="#arrow-right"></use>
            </svg>
          </div>
          <div class="pagination__content | l-flow">
            <h3>{nextItem.title}</h3>
            <p>Next Project</p>
          </div>

        </div>
      </a>
    </div>
  ) : (
    <div class="pagination__inner | u-border--block"></div>
  )}

</section>
<CompSvgSheet />

<style lang="scss">
  @use "../styles/20-mixins/media-query" as *;
  @use "../styles/10-functions/theme-accessor" as *;

  .pagination {
    --space-switcher: 0;
    --switcher-vertical-alignment: stretch;
    flex-wrap: nowrap;
  }

  .pagination__inner {
    padding-block: var(--space-m-l);

    &:first-of-type {
      border-inline-end: var(--border);
    }

    a {
      text-decoration: none;
    }

    .l-sidebar {
      --space-sidebar: var(--space-gutter);
      --sidebar-vertical-alignment: center;
      display: flex;
    }

    // previous link
    &:first-of-type {
      padding-inline-end: var(--space-gutter);
    }
    
    // next link
    &:last-of-type {
      text-align: end;
      padding-inline-start: var(--space-gutter);

      & .l-sidebar {
        flex-direction: row-reverse;
      }
    }
  }

  .pagination__icon {
    inline-size: 100%;

    .icon {
      block-size: var(--font-size-base);
    }
  }

  .pagination__content {
    p {
      --space-flow: 0.5em;
      color: get(color, new-grey);
    }
  }

  @include media-query(from, tablet) {
    .pagination__icon {
      max-inline-size: 1ch;
    }
  }
</style>