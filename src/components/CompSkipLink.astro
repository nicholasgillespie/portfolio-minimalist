---
// Component Props
const { targetId } = Astro.props;

// Dynamic Data & Logic
const currentUrl = new URL(Astro.request.url, import.meta.env.SITE);
const currentPath = currentUrl.pathname.replace(/\/$/, '');
---

<a 
  href={`${currentPath}#${targetId}`} 
  id={`skip-link-#${targetId}`} 
  class="skip-link button">{`Skip to ${targetId}`}
  <div class="l-stack">
    <span>{currentPath}</span>
    <span>{`#${targetId}`}</span>
  </div>
</a>

<style lang="scss">
  @use "../styles/10-functions/theme-accessor" as *;

  .skip-link {
    // Position the skip link off-screen
    position: absolute;
    // inset-block-start: -100vh;
    // inset-inline-start: -100vh;
    
    // Style the skip link
    inline-size: max-content;
    max-inline-size: var(--space-skip-link-max-inline, calc(100vw - 2 * var(--space-gutter)));
    z-index: 999;

    // When focused, bring the skip link back into view
    &:focus-visible {
      inset-block-start: var(--space-skip-link-block, var(--space-gutter));
      inset-inline-start: var(--space-skip-link-inline, var(--space-gutter));
      mix-blend-mode: difference;
    }
  }
</style>